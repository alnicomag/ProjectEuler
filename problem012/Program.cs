using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace problem012
{
	/// <summary>
	/// The sequence of triangle numbers is generated by adding the natural numbers.
	/// So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
	/// 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
	/// Let us list the factors of the first seven triangle numbers:
	/// 1: 1
	/// 3: 1,3
	/// 6: 1,2,3,6
	/// 10: 1,2,5,10
	/// 15: 1,3,5,15
	/// 21: 1,3,7,21
	/// 28: 1,2,4,7,14,28
	/// We can see that 28 is the first triangle number to have over five divisors.
	/// What is the value of the first triangle number to have over five hundred divisors?
	/// </summary>
	class Program
	{
		static void Main(string[] args)
		{
			long counting_up_triangle_number = 1;
			int diff = 2;

			while (DivisorsCount(counting_up_triangle_number) < 500)
			{
				counting_up_triangle_number += diff;
				diff++;
			}
			Console.WriteLine(counting_up_triangle_number);
			Console.ReadLine();
		}

		static int DivisorsCount(long n)
		{
			int count = 0;
			long first_half_max=0;
			for (long i = 1; i*i < n; i++)
			{
				if (n % i == 0)
				{
					count+=2;
				}
				first_half_max = i;
			}
			if ((first_half_max + 1) * (first_half_max + 1) == n)
			{
				count++;
			}
			return count;
		}
	}
}
